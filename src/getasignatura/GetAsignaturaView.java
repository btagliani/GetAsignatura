/*
 * GetAsignaturaView.java
 */
package getasignatura;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 * The application's main frame.
 */
public class GetAsignaturaView extends FrameView {
    
    loginHandler loginInstance;
    private String path;
    private DefaultListModel listModel = new DefaultListModel();
    
    public GetAsignaturaView(SingleFrameApplication app) {
        super(app);
        
        
        initComponents();
        descargando.setText("Descargando archivo:");
        totalMomento.setText("Total descargado hasta el momento:");
        materiaMomento.setText("Descargando material de la asignatura:");
        carpetaMomento.setText("En la carpeta:");
        comentarios.setText("Descargando");
        archivoDescargando.setText("Archivo");
        matSel.setText("Seleccione las Asignaturas que desea descargar");
        okBu.setText("Ok");
    }
    
    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = GetAsignaturaApp.getApplication().getMainFrame();
            aboutBox = new GetAsignaturaAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        GetAsignaturaApp.getApplication().show(aboutBox);
    }
    
    public synchronized boolean cargologin(loginHandler log) throws InterruptedException {
        Thread login = new Thread(log);
        login.start();
        while (login.isAlive()) {
            this.wait(2000);
            System.out.println("Waiting for login!");
        }
        return log.isLogedIn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        passField = new javax.swing.JPasswordField();
        userField = new javax.swing.JTextField();
        userLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        panelDescarga = new javax.swing.JPanel();
        descargando = new javax.swing.JLabel();
        totalMomento = new javax.swing.JLabel();
        tamano = new javax.swing.JLabel();
        materiaMomento = new javax.swing.JLabel();
        materia = new javax.swing.JLabel();
        archivoDescargando = new javax.swing.JLabel();
        comentarios = new javax.swing.JLabel();
        carpetaMomento = new javax.swing.JLabel();
        carpeta = new javax.swing.JLabel();
        panelMaterias = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaMaterias = new javax.swing.JList();
        matSel = new javax.swing.JLabel();
        okBu = new javax.swing.JButton();

        mainPanel.setMaximumSize(new java.awt.Dimension(400, 400));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(400, 400));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(getasignatura.GetAsignaturaApp.class).getContext().getResourceMap(GetAsignaturaView.class);
        title.setText(resourceMap.getString("title.text")); // NOI18N
        title.setName("title"); // NOI18N
        mainPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 29, -1, -1));

        passField.setText(resourceMap.getString("passField.text")); // NOI18N
        passField.setName("passField"); // NOI18N
        passField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passFieldKeyPressed(evt);
            }
        });
        mainPanel.add(passField, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 96, 96, -1));

        userField.setText(resourceMap.getString("userField.text")); // NOI18N
        userField.setName("userField"); // NOI18N
        mainPanel.add(userField, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 70, 96, -1));

        userLabel.setText(resourceMap.getString("userLabel.text")); // NOI18N
        userLabel.setName("userLabel"); // NOI18N
        mainPanel.add(userLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 73, -1, -1));

        passLabel.setText(resourceMap.getString("passLabel.text")); // NOI18N
        passLabel.setName("passLabel"); // NOI18N
        mainPanel.add(passLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 99, -1, -1));

        loginButton.setText(resourceMap.getString("loginButton.text")); // NOI18N
        loginButton.setName("loginButton"); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        mainPanel.add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 145, -1, -1));

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(getasignatura.GetAsignaturaApp.class).getContext().getActionMap(GetAsignaturaView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        panelDescarga.setName("panelDescarga"); // NOI18N

        descargando.setText(resourceMap.getString("descargando.text")); // NOI18N
        descargando.setName("descargando"); // NOI18N

        totalMomento.setText(resourceMap.getString("totalMomento.text")); // NOI18N
        totalMomento.setName("totalMomento"); // NOI18N

        tamano.setText(resourceMap.getString("tamano.text")); // NOI18N
        tamano.setName("tamano"); // NOI18N

        materiaMomento.setText(resourceMap.getString("materiaMomento.text")); // NOI18N
        materiaMomento.setName("materiaMomento"); // NOI18N

        materia.setText(resourceMap.getString("materia.text")); // NOI18N
        materia.setName("materia"); // NOI18N

        archivoDescargando.setText(resourceMap.getString("archivoDescargando.text")); // NOI18N
        archivoDescargando.setName("archivoDescargando"); // NOI18N

        comentarios.setForeground(resourceMap.getColor("comentarios.foreground")); // NOI18N
        comentarios.setText(resourceMap.getString("comentarios.text")); // NOI18N
        comentarios.setName("comentarios"); // NOI18N

        carpetaMomento.setText(resourceMap.getString("carpetaMomento.text")); // NOI18N
        carpetaMomento.setName("carpetaMomento"); // NOI18N

        carpeta.setText(resourceMap.getString("carpeta.text")); // NOI18N
        carpeta.setName("carpeta"); // NOI18N

        javax.swing.GroupLayout panelDescargaLayout = new javax.swing.GroupLayout(panelDescarga);
        panelDescarga.setLayout(panelDescargaLayout);
        panelDescargaLayout.setHorizontalGroup(
            panelDescargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDescargaLayout.createSequentialGroup()
                .addGroup(panelDescargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(materiaMomento)
                        .addGap(10, 10, 10)
                        .addComponent(materia))
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(descargando))
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(archivoDescargando))
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(totalMomento)
                        .addGap(18, 18, 18)
                        .addComponent(tamano))
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(carpetaMomento))
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(carpeta))
                    .addGroup(panelDescargaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comentarios)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        panelDescargaLayout.setVerticalGroup(
            panelDescargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDescargaLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelDescargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(materiaMomento)
                    .addComponent(materia))
                .addGap(18, 18, 18)
                .addComponent(descargando)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(archivoDescargando)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carpetaMomento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carpeta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comentarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDescargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalMomento)
                    .addComponent(tamano))
                .addGap(21, 21, 21))
        );

        panelMaterias.setName("panelMaterias"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listaMaterias.setModel(listModel);
        listaMaterias.setName("listaMaterias"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listaMaterias, org.jdesktop.beansbinding.ObjectProperty.create(), listaMaterias, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(listaMaterias);

        matSel.setText(resourceMap.getString("matSel.text")); // NOI18N
        matSel.setName("matSel"); // NOI18N

        okBu.setText(resourceMap.getString("okBu.text")); // NOI18N
        okBu.setName("okBu"); // NOI18N
        okBu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMateriasLayout = new javax.swing.GroupLayout(panelMaterias);
        panelMaterias.setLayout(panelMateriasLayout);
        panelMateriasLayout.setHorizontalGroup(
            panelMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMateriasLayout.createSequentialGroup()
                .addGroup(panelMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMateriasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                    .addGroup(panelMateriasLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(matSel))
                    .addGroup(panelMateriasLayout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(okBu)))
                .addContainerGap())
        );
        panelMateriasLayout.setVerticalGroup(
            panelMateriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMateriasLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(matSel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okBu)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
// TODO add your handling code here:
    if (userField.getText().isEmpty() || passField.getText().isEmpty()) {
        JOptionPane.showMessageDialog(mainPanel, "El campo de Usuario o Password no puede estar vacio", "Login Error", JOptionPane.ERROR_MESSAGE);
    } else {
        loginInstance = new loginHandler(userField.getText(), new String(passField.getPassword()));
        Component comp = this.getComponent();
        comp.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        boolean logi = false;
        try {
            logi = cargologin(loginInstance);
        } catch (InterruptedException ex) {
            Logger.getLogger(GetAsignaturaView.class.getName()).log(Level.SEVERE, null, ex);
        }
        comp.setCursor(Cursor.getDefaultCursor());
        if (!logi) {
            JOptionPane.showMessageDialog(mainPanel, "Datos erroneos", "Login Error", JOptionPane.ERROR_MESSAGE);
        } else {
            path = "";
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Directorio de Descarga");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showOpenDialog(this.getComponent()) == JFileChooser.APPROVE_OPTION) {
                if (chooser.getSelectedFile().getPath().contains("/")) {
                    path = chooser.getSelectedFile().getPath() + "/";
                    loginInstance.setWindows(false);
                } else {
                    path = chooser.getSelectedFile().getPath() + "\\";
                }
            } else {
                System.out.println("No Selection ");
            }
            loginInstance.setPath(path);
            for (String materia2 : loginInstance.getMaterias()) {
                listModel.addElement(materia2);
            }
            mainPanel.setVisible(false);
            this.getFrame().getContentPane().remove(mainPanel);
            this.getFrame().add(panelMaterias);
            this.getFrame().getContentPane().invalidate();
            this.getFrame().getContentPane().validate();
        }
    }
}//GEN-LAST:event_loginButtonActionPerformed
    
private void passFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passFieldKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) {
        loginButtonActionPerformed(null);
    }
}//GEN-LAST:event_passFieldKeyPressed
    
private void okBuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBuActionPerformed

    ArrayList<String> materiasDescarga = new ArrayList<String>();
    Object[] selectedValuesList = listaMaterias.getSelectedValues();
    for (Object mat : selectedValuesList) {
        materiasDescarga.add((String) mat);
    }
    loginInstance.setMaterias(materiasDescarga);
    loginInstance.setDoDownload(true);
    Thread login = new Thread(loginInstance);
    login.start();
    panelMaterias.setVisible(false);
    this.getFrame().getContentPane().remove(panelMaterias);
    this.getFrame().add(panelDescarga);
    this.getFrame().getContentPane().invalidate();
    this.getFrame().getContentPane().validate();
    int delay = 1000; //milliseconds
    ActionListener taskPerformer = new ActionListener() {
        
        public void actionPerformed(ActionEvent evt) {
            materia.setText(loginInstance.getMateriaDescarga());
            comentarios.setText(loginInstance.getComentarios());
            archivoDescargando.setText(loginInstance.getArchivosDescarga());
            carpeta.setText(loginInstance.getCarpeta());
            Float tamaño = ((loginInstance.getTamañoDescarga() / 1024) / 1024);
            DecimalFormat df = new DecimalFormat("#.##");
            tamano.setText("" + df.format(tamaño) + " Mb");
        }
    };
    new Timer(delay, taskPerformer).start();
}//GEN-LAST:event_okBuActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel archivoDescargando;
    private javax.swing.JLabel carpeta;
    private javax.swing.JLabel carpetaMomento;
    private javax.swing.JLabel comentarios;
    private javax.swing.JLabel descargando;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaMaterias;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel matSel;
    private javax.swing.JLabel materia;
    private javax.swing.JLabel materiaMomento;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton okBu;
    private javax.swing.JPanel panelDescarga;
    private javax.swing.JPanel panelMaterias;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel passLabel;
    private javax.swing.JLabel tamano;
    private javax.swing.JLabel title;
    private javax.swing.JLabel totalMomento;
    private javax.swing.JTextField userField;
    private javax.swing.JLabel userLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
}
